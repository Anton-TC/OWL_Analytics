/**
This is spectacularly generated code by spectacular based on
Qlik Cloud Services APIs
*/
import Auth from '../auth/auth.js';
import ListableResource from '../listable.js';
import type { Config } from '../types/types.js';
export type Role = {
    /** The timestamp for when the role was created.
  @example "2021-03-21T17:32:28Z" */
    createdAt: string;
    /** Descriptive text for the role.
  @example "Grants permission to generate API keys" */
    description: string;
    /** The unique identifier for the role.
  @example "507f191e810c19729de860ea" */
    id: string;
    /** The timestamp for when the role was last updated.
  @example "2021-03-22T10:01:02Z" */
    lastUpdatedAt: string;
    /** The level of access associated to the role.
  @example "admin" */
    level?: 'admin' | 'user' | string;
    /** Contains links for the role. */
    links: {
        self: {
            href: string;
        };
    };
    /** The name of the role.
  @example "Developer" */
    name: string;
    /** An array of permissions associated with the role.
  @example ["edit_foo"] */
    permissions?: Array<string>;
    /** The tenant unique identifier associated with the given Role.
  @example "12345678-1234-5678-1234-567812345678'" */
    tenantId: string;
    /** The type of role.
  @example "default" */
    type: 'default' | string;
    [key: string]: any;
};
export declare class Roles {
    auth: Auth;
    config: Config;
    constructor(config: Config | Auth);
    /**    Returns the requested role.
    Get role by ID
  
      @param id - The role's unique identifier
    */
    get(id: string): Promise<Role>;
    /**    Returns a list of roles using cursor-based pagination.
    List roles
  
      @param filter - The advanced filtering to use for the query. Refer to RFC 7644 https://datatracker.ietf.org/doc/rfc7644/ for the syntax. All conditional statements within this query parameter are case insensitive.
      @param limit - The number of roles to retrieve.
      @param next - The next page cursor.
      @param prev - The previous page cursor.
      @param sort - Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending.
      @param totalResults - Determines wether to return a count of the total records matched in the query. Defaults to false.
    */
    getRoles(queryParams?: {
        filter?: string;
        limit?: number;
        next?: string;
        prev?: string;
        sort?: string;
        totalResults?: boolean;
    }): Promise<ListableResource<Role>>;
}
