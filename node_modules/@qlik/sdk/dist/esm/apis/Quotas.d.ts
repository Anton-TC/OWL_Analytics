/**
This is spectacularly generated code by spectacular based on
Qlik Cloud Services APIs
*/
import Auth from '../auth/auth.js';
import type { Config } from '../types/types.js';
export type GetQuotaByIdResult = {
    /** Quota item. */
    data: Array<Quota>;
    [key: string]: any;
};
export type GetQuotasResult = {
    /** Array of quota items. */
    data: Array<Quota>;
    [key: string]: any;
};
export type Quota = {
    /** The attributes of the quota. */
    attributes: {
        quota: number;
        unit: string;
        usage?: number;
        warningThresholds?: Array<number>;
    };
    /** The unique identifier of the quota item. For example, "app_mem_size", "app_upload_disk_size", or "shared_spaces". */
    id: string;
    /** The resource type of the quota item. Always equal to "quotas". */
    type: string;
    [key: string]: any;
};
export declare class Quotas {
    auth: Auth;
    config: Config;
    constructor(config: Config | Auth);
    /**
    Returns a specific quota item for the tenant (provided in JWT).
  
      @param id - The unique identifier of the quota item. For example, "app_mem_size", "app_upload_disk_size", or "shared_spaces".
      @param reportUsage - The Boolean flag indicating whether quota usage shall be part of the response. The default value is false (usage not included).
    */
    gets(id: string, queryParams?: {
        reportUsage?: boolean;
    }): Promise<GetQuotaByIdResult>;
    /**
    Returns all quota items for the tenant (provided in JWT).
  
      @param reportUsage - The Boolean flag indicating whether quota usage shall be part of the response. The default value is false (only limits returned).
    */
    getQuotas(queryParams?: {
        reportUsage?: boolean;
    }): Promise<GetQuotasResult>;
}
